{
  "info": {
    "name": "API Cat√©gorisation - Messages SMS/Transactions",
    "description": "Collection Postman pour l'API de cat√©gorisation automatique de messages SMS de transactions financi√®res (Togocom, Moov, Mixx By Yas)",
    "version": "2.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000/api",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "üîë Authentification",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phoneNumber\": \"99595766\",\n    \"password\": \"test123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login/",
              "host": ["{{base_url}}"],
              "path": ["auth", "login", ""]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set(\"token\", response.tokens.access);",
                  "    console.log(\"Token sauvegard√©:\", response.tokens.access);",
                  "}",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has tokens\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('tokens');",
                  "    pm.expect(response.tokens).to.have.property('access');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìù Enregistrement de Messages",
      "item": [
        {
          "name": "Enregistrer Messages - Exemples Complets",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"user_id\": \"d9e0f1a2-b3c4-43d5-e6f7-a8b9c0d1e2f3\",\n        \"message\": \"Vous avez retire 60 000 FCFA aupr√®s de l'agent LR ETS FIAT LUX-SERVICE (32765), le 15-11-24 14:54. Frais: 900 FCFA. Nouveau solde: 232 139 FCFA . Ref: 7213354475.\"\n    },\n    {\n        \"user_id\": \"a6b7c8d9-e0f1-46a2-b3c4-d5e6f7a8b9c0\",\n        \"message\": \"Retrait valid√©\\r\\nMontant: 100,000 FCFA \\r\\nFrais HT: 909 FCFA, TAF: 91 FCFA \\r\\nNom PDV: LINARCEL_ETS_MBC\\r\\nDate: 17-Mar-2025 12:52:20\\r\\nNouveau solde Flooz: 61,271 FCFA\\r\\nVeuillez retirer l'argent chez le Pdv. \\r\\nTrx id: 1250317169479\"\n    },\n    {\n        \"user_id\": \"e8f9a0b1-c2d3-47e4-f5a6-b7c8d9e0f1a2\",\n        \"message\": \"TMoney devient Mixx By Yas. Vous avez envoy√© 10 300 FCFA au 92939241, le 26-02-25 08:17. Frais: 30 FCFA. Nouveau solde: 45 670 FCFA. Ref: 1234567890.\"\n    },\n    {\n        \"user_id\": \"4d5e6f7a-8b9c-0d1e-2f3a-4b5c6d7e8f9a\",\n        \"message\": \"Vous avez pay√© 14 574 FCFA a CEET (reference: 01001, string), le 24-05-24 06:14. Frais: 0 FCFA. Nouveau solde: 12 345 FCFA. Ref: 9876543210.\"\n    },\n    {\n        \"user_id\": \"b8c9d0e1-f2a3-47b4-c5d6-e7f8a9b0c1d2\",\n        \"message\": \"TMoney devient Mixx By Yas. Vous avez retire 250 000 FCFA aupr√®s de l'agent LR ETS CLOVIS SHOP (32771), le 11-04-25 17:19. Frais: 3 700 FCFA. Nouveau solde: 3 905 FCFA . Ref: 11054960732.\"\n    },\n    {\n        \"user_id\": \"c0d1e2f3-a4b5-48c6-d7e8-f9a0b1c2d3e4\",\n        \"message\": \"TMoney devient Mixx By Yas. Vous avez retire 1 500 FCFA aupr√®s de l'agent NANA 20 (18112), le 03-03-25 08:01. Frais: 100 FCFA. Nouveau solde: 109 FCFA . Ref: 10522621268.\"\n    },\n    {\n        \"user_id\": \"d2e3f4a5-b6c7-49d8-e9f0-a1b2c3d4e5f6\",\n        \"message\": \"TMoney devient Mixx By Yas. Vous avez retire 358 000 FCFA aupr√®s de l'agent SPT TSEVIE (10369), le 21-03-25 09:03. Frais: 4 200 FCFA. Nouveau solde: 3 552 FCFA . Ref: 10764078269.\"\n    }\n]"
            },
            "url": {
              "raw": "{{base_url}}/messages/enregister/",
              "host": ["{{base_url}}"],
              "path": ["messages", "enregister", ""]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has success status\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.status).to.eql(\"success\");",
                  "});",
                  "",
                  "pm.test(\"Processing was triggered\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.processing_triggered).to.be.true;",
                  "});",
                  "",
                  "console.log(\"Messages enregistr√©s:\", pm.response.json().created);"
                ]
              }
            }
          ]
        },
        {
          "name": "Enregistrer Message Simple",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"user_id\": \"test-user-123\",\n        \"message\": \"Vous avez retire 5 000 FCFA aupr√®s de l'agent TEST AGENT (12345), le 28-06-25 10:00. Frais: 50 FCFA. Nouveau solde: 10 000 FCFA. Ref: 123456789.\"\n    }\n]"
            },
            "url": {
              "raw": "{{base_url}}/messages/enregister/",
              "host": ["{{base_url}}"],
              "path": ["messages", "enregister", ""]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìä Consultation des Messages Trait√©s",
      "item": [
        {
          "name": "Page 1 - Messages Trait√©s",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/processed-messages/",
              "host": ["{{base_url}}"],
              "path": ["processed-messages", ""]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has pagination info\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('total');",
                  "    pm.expect(response).to.have.property('page');",
                  "    pm.expect(response).to.have.property('page_size');",
                  "    pm.expect(response).to.have.property('results');",
                  "});",
                  "",
                  "const response = pm.response.json();",
                  "console.log(`Page ${response.page}/${Math.ceil(response.total / response.page_size)} - ${response.results.length} r√©sultats`);"
                ]
              }
            }
          ]
        },
        {
          "name": "Page 2 - 10 √©l√©ments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/processed-messages/?page=2&page_size=10",
              "host": ["{{base_url}}"],
              "path": ["processed-messages", ""],
              "query": [
                {
                  "key": "page",
                  "value": "2"
                },
                {
                  "key": "page_size",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Filtrer par Cat√©gorie - RETRAIT",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/processed-messages/?category=RETRAIT&page_size=5",
              "host": ["{{base_url}}"],
              "path": ["processed-messages", ""],
              "query": [
                {
                  "key": "category",
                  "value": "RETRAIT"
                },
                {
                  "key": "page_size",
                  "value": "5"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Filtrer par Type - togocom",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/processed-messages/?type=togocom&page_size=5",
              "host": ["{{base_url}}"],
              "path": ["processed-messages", ""],
              "query": [
                {
                  "key": "type",
                  "value": "togocom"
                },
                {
                  "key": "page_size",
                  "value": "5"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Filtrer par Utilisateur",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/processed-messages/?user_id=d9e0f1a2-b3c4-43d5-e6f7-a8b9c0d1e2f3",
              "host": ["{{base_url}}"],
              "path": ["processed-messages", ""],
              "query": [
                {
                  "key": "user_id",
                  "value": "d9e0f1a2-b3c4-43d5-e6f7-a8b9c0d1e2f3"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "‚ö° Traitement Manuel",
      "item": [
        {
          "name": "Lancer Traitement Manuel",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/process-messages/",
              "host": ["{{base_url}}"],
              "path": ["process-messages", ""]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 202\", function () {",
                  "    pm.response.to.have.status(202);",
                  "});",
                  "",
                  "pm.test(\"Processing message received\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.message).to.include(\"Traitement lanc√©\");",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üë§ Profil Utilisateur",
      "item": [
        {
          "name": "R√©cup√©rer Profil",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/profile/",
              "host": ["{{base_url}}"],
              "path": ["users", "profile", ""]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"User profile has required fields\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('user_id');",
                  "    pm.expect(response).to.have.property('phoneNumber');",
                  "    pm.expect(response).to.have.property('role');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// V√©rifier que le token est disponible",
          "if (!pm.environment.get('token') && pm.request.url.path.indexOf('auth/login') === -1) {",
          "    console.warn('Token non disponible. Veuillez d\'abord vous connecter.');",
          "}"
        ]
      }
    }
  ]
} 