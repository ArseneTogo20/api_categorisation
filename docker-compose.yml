services:
  # Service pour l'application Django
  api:
    build: .
    container_name: projet_api
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  # Service pour les workers Celery
  celery_worker:
    build: .
    container_name: projet_celery_worker
    command: celery -A projet_categorisation worker --loglevel=info --concurrency=4
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  # Service pour la base de données MySQL
  db:
    image: mysql:8.0
    container_name: projet_db
    ports:
      - "3307:3306" # Expose le port 3306 du conteneur sur le port 3307 de l'hôte
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysql", "-h", "localhost", "-u", "${DB_USER}", "-p${DB_PASSWORD}", "-e", "use ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service Redis pour Celery
  redis:
    image: redis:7.2-alpine
    container_name: projet_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  mysql_data:
  redis_data: 